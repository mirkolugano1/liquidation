# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js project to Azure Function App - liquidationfunction

on:
    push:
        branches:
            - master
    workflow_dispatch:

env:
    NODE_VERSION: "20.x" # set this to the node version to use (supports 8.x, 10.x, 12.x)

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        permissions:
            contents: read

        steps:
            - name: "Checkout GitHub Action"
              uses: actions/checkout@v4

            - name: Setup Node ${{ env.NODE_VERSION }} Environment
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Login to Azure (for tests)
              uses: azure/login@v2
              with:
                  creds: ${{ secrets.AZURE_CREDENTIALS }}

            - name: "Resolve Project Dependencies Using Npm"
              shell: bash
              run: |
                  npm install
                  npm run build --if-present

            - name: Prepare deployment package
              run: |
                  # Create a deployment package excluding node_modules
                  zip -r deployment.zip . -x "node_modules/*" "dist/*" ".git/*"
                  echo "Listing contents of deployment.zip:"
                  unzip -l deployment.zip

            - name: Deploy to Azure FunctionApp
              shell: bash
              run: |
                  # Configure Azure to build the app during deployment
                  az functionapp config appsettings set --name liquidationfunction --resource-group liquidation_functionappgroup --settings SCM_DO_BUILD_DURING_DEPLOYMENT=true

                  # Deploy the source code and let Azure build it
                  az functionapp deployment source config-zip -g liquidation_functionappgroup -n liquidationfunction --src "./deployment.zip" --build-remote true
