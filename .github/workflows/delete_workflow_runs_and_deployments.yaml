name: Delete Old Workflow Runs And Deployments

on:
    schedule:
        - cron: "0 0 * * *" # Runs daily at midnight UTC, change as needed

jobs:
    delete_runs:
        runs-on: ubuntu-latest
        permissions:
            actions: write # Needed for deleting runs
        steps:
            - name: Install GitHub CLI
              run: sudo apt-get install gh -y

            - name: Delete workflow runs
              run: |
                  gh run list --limit 100 --json databaseId,createdAt \
                  --jq '.[] | select(.createdAt < (now - 86400 | todate)) | .databaseId' \
                  | xargs -I {} gh run delete {}

              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    delete_deployments:
        runs-on: ubuntu-latest
        permissions:
            deployments: write # Needed for deleting deployments
        steps:
            - name: Delete old deployments
              run: |
                  DEPLOYMENTS=$(gh api repos/mirkolugano1/liquidation/deployments --jq '.[] | {id: .id, statuses_url: .statuses_url}')
                    echo "$DEPLOYMENTS" | jq -c '.[]' | while read -r deployment; do
                        id=$(echo "$deployment" | jq -r '.id')
                        statuses_url=$(echo "$deployment" | jq -r '.statuses_url')
                        is_active=$(gh api "$statuses_url" --jq 'map(select(.state == "in_progress" or .state == "queued")) | length > 0')
                        if [ "$is_active" = "false" ]; then
                            echo "Deleting deployment $id"
                            gh api -X DELETE "repos/mirkolugano1/liquidation/deployments/$id"
                        else
                            echo "Skipping active deployment $id"
                        fi
                    done
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
